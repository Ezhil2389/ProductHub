# Production Environment Configuration

# Production Database Configuration
# In production, consider using a real database like PostgreSQL or MySQL
spring.datasource.url=jdbc:h2:file:./data/cruddb-prod;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:productionPassword}
spring.h2.console.enabled=false

# Production Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=10000
spring.datasource.hikari.pool-name=ProdHikariPool

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Production JWT Configuration
app.jwt.secret=${JWT_SECRET:ProdJwtSecretKeyForJwtTokenGenerationShouldBeVeryLongAndComplex}
app.jwt.expiration=900000

# Production CORS Configuration
app.cors.allowed-origins=${ALLOWED_ORIGINS:https://example.com}
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:https://example.com}

# Production Encryption Configuration
app.encryption.secret=${ENCRYPTION_KEY:ProdKeyFor32ByteAESEncryptionStrongKey}
app.encryption.migrate-on-startup=false

# Production Logging
logging.level.root=WARN
logging.level.com.example.crud=INFO
logging.level.org.springframework=WARN

# Google OAuth2 Configuration for Production
google.client.id=${GOOGLE_CLIENT_ID:your-production-client-id}
google.client.secret=${GOOGLE_CLIENT_SECRET:your-production-client-secret}
google.redirect.uri=${GOOGLE_REDIRECT_URI:https://example.com/oauth/google/callback} 